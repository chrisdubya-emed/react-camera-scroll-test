{"ast":null,"code":"var _jsxFileName = \"/Users/chriswilliams/Dev/other/react-camera-scroll-test/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Suspense, useRef } from \"react\";\nimport { Canvas } from \"@react-three/fiber\"; // import { Environment } from \"@react-three/drei\"\n// import Model from \"./Model\"\n\nimport Overlay from \"./Overlay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  var overlay = useRef();\n  var caption = useRef();\n  var scroll = useRef(0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Canvas, {\n      shadows: true,\n      onCreated: function onCreated(state) {\n        return state.events.connect(overlay.current);\n      },\n      raycaster: {\n        computeOffsets: function computeOffsets(_ref) {\n          var clientX = _ref.clientX,\n              clientY = _ref.clientY;\n          return {\n            offsetX: clientX,\n            offsetY: clientY\n          };\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n        intensity: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: null,\n        children: [/*#__PURE__*/_jsxDEV(Model, {\n          scroll: scroll\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Environment, {\n          preset: \"city\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Overlay, {\n      ref: overlay,\n      caption: caption,\n      scroll: scroll\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"g1t1HsdMVCGfj/QNxwhifA/O8Ps=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/chriswilliams/Dev/other/react-camera-scroll-test/src/App.js"],"names":["React","Suspense","useRef","Canvas","Overlay","App","overlay","caption","scroll","state","events","connect","current","computeOffsets","clientX","clientY","offsetX","offsetY"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAASC,MAAT,QAAuB,oBAAvB,C,CACA;AACA;;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,MAAMC,OAAO,GAAGJ,MAAM,EAAtB;AACA,MAAMK,OAAO,GAAGL,MAAM,EAAtB;AACA,MAAMM,MAAM,GAAGN,MAAM,CAAC,CAAD,CAArB;AACA,sBACE;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,OAAO,MADT;AAEE,MAAA,SAAS,EAAE,mBAACO,KAAD;AAAA,eAAWA,KAAK,CAACC,MAAN,CAAaC,OAAb,CAAqBL,OAAO,CAACM,OAA7B,CAAX;AAAA,OAFb;AAGE,MAAA,SAAS,EAAE;AAAEC,QAAAA,cAAc,EAAE;AAAA,cAAGC,OAAH,QAAGA,OAAH;AAAA,cAAYC,OAAZ,QAAYA,OAAZ;AAAA,iBAA2B;AAAEC,YAAAA,OAAO,EAAEF,OAAX;AAAoBG,YAAAA,OAAO,EAAEF;AAA7B,WAA3B;AAAA;AAAlB,OAHb;AAAA,8BAIE;AAAc,QAAA,SAAS,EAAE;AAAzB;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAE,IAApB;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,MAAM,EAAEP;AAAf;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,WAAD;AAAa,UAAA,MAAM,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE,QAAC,OAAD;AAAS,MAAA,GAAG,EAAEF,OAAd;AAAuB,MAAA,OAAO,EAAEC,OAAhC;AAAyC,MAAA,MAAM,EAAEC;AAAjD;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA,kBADF;AAeD;;GAnBuBH,G;;KAAAA,G","sourcesContent":["import React, { Suspense, useRef } from \"react\"\nimport { Canvas } from \"@react-three/fiber\"\n// import { Environment } from \"@react-three/drei\"\n// import Model from \"./Model\"\nimport Overlay from \"./Overlay\"\n\nexport default function App() {\n  const overlay = useRef()\n  const caption = useRef()\n  const scroll = useRef(0)\n  return (\n    <>\n      <Canvas\n        shadows\n        onCreated={(state) => state.events.connect(overlay.current)}\n        raycaster={{ computeOffsets: ({ clientX, clientY }) => ({ offsetX: clientX, offsetY: clientY }) }}>\n        <ambientLight intensity={1} />\n        <Suspense fallback={null}>\n          <Model scroll={scroll} />\n          <Environment preset=\"city\" />\n        </Suspense>\n      </Canvas>\n      <Overlay ref={overlay} caption={caption} scroll={scroll} />\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}